<tool id="liftOver1" name="Convert genome coordinates" version="1.0.2">
  <description> between assemblies and genomes</description>
  <command interpreter="python">liftOver_wrapper.py $input "$out_file1" "$out_file2" $dbkey $to_dbkey $minMatch</command>
  <inputs>
    <param format="interval" name="input" type="data" label="Convert coordinates of">
      <validator type="unspecified_build" />
      <validator type="dataset_metadata_in_file" filename="liftOver.loc" metadata_name="dbkey" metadata_column="0" message="Liftover mappings are currently not available for the specified build." />
    </param>
    <param name="to_dbkey" type="select" label="To">
      <options from_file="liftOver.loc">
        <column name="name" index="1"/>
        <column name="value" index="2"/>
        <column name="dbkey" index="0"/>
        <filter type="data_meta" ref="input" key="dbkey" column="0" />
      </options>
    </param> 
    <param name="minMatch" size="10" type="float" value="0.10" label="Minimum ratio of bases that must remap" />
  </inputs>
  <outputs>
    <data format="input" name="out_file1" />
    <data format="input" name="out_file2" />
  </outputs>
  <requirements>
    <requirement type="binary">liftOver</requirement>
  </requirements>
  <!--
  <tests>
    <test>
      <param name="input" value="5.bed" dbkey="hg18" ftype="bed" />
      <param name="to_dbkey" value="/depot/data2/galaxy/hg18/liftOver/hg18ToPanTro2.over.chain" />
      <param name="misMatch" value="0.95" />
      <output name="out_file1" file="5_liftover_mapped.bed"/>
      <output name="out_file2" file="5_liftover_unmapped.bed"/>
    </test>
  </tests>
  -->
  <help>

.. class:: warningmark

Make sure that the genome build of the input dataset is specified (click the pencil icon in the history item to set it if necessary).

.. class:: warningmark

This tool will only work on interval datasets with chromosome in column 1,
start co-ordinate in column 2 and end co-ordinate in column 3. BED comments
and track and browser lines will be ignored, but if other non-interval lines
are present the tool will return empty output datasets.

-----

.. class:: infomark

**What it does**

This tool converts coordinates and annotations between assemblies and genomes. It produces 2 files, one containing all the mapped coordinates and the other containing the unmapped coordinates, if any. 

-----

**Example**

Converting the following hg16 intervals to hg18 intervals::

    chrX  85170   112199  AK002185  0  +
    chrX  110458  112199  AK097346  0  +
    chrX  112203  121212  AK074528  0  -

will produce the following hg18 intervals::

    chrX  132991  160020  AK002185  0  +
    chrX  158279  160020  AK097346  0  +
    chrX  160024  169033  AK074528  0  -

</help>
<code file="liftOver_wrapper_code.py"/>
</tool>
